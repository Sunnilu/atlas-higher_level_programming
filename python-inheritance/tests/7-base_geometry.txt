import unittest

class TestBaseGeometry(unittest.TestCase):
    def test_area(self):
        base_geo = BaseGeometry()
        with self.assertRaises(Exception) as context:
            base_geo.area()
        self.assertEqual(str(context.exception), "area() is not implemented")

    def test_integer_validator(self):
        base_geo = BaseGeometry()
        # Test case for non-integer value
        with self.assertRaises(TypeError) as context:
            base_geo.integer_validator("test", "string")
        self.assertEqual(str(context.exception), "test must be an integer")
        
        # Test case for integer value less than or equal to 0
        with self.assertRaises(ValueError) as context:
            base_geo.integer_validator("test", 0)
        self.assertEqual(str(context.exception), "test must be greater than 0")

        # Test case for integer value greater than 0
        try:
            base_geo.integer_validator("test", 10)
        except:
            self.fail("integer_validator raised unexpected Exception.")

if __name__ == "__main__":
    unittest.main()


